---
- name: "Clone GitLab to {{ gitlab_install_path }}"
  git:
    depth: 1
    repo: https://gitlab.com/gitlab-org/gitlab-{{ gitlab_version }}.git
    dest: "{{ gitlab_install_path | mandatory }}"
    version: "{{ gitlab_version_number | mandatory }}"
    force: yes

- import_tasks: gitlab_permissions.yml

- import_tasks: gitlab_config_files.yml

- name: Configure Git global settings for git user
  git_config:
    name: core.autocrlfs
    scope: global
    value: input

- name: Disable 'git gc --auto' because GitLab already runs 'git gc' when needed
  git_config:
    name: gc.auto
    scope: global
    value: 0
  become_user: "{{ gitlab_user }}"

- name: Enable packfile bitmaps
  git_config:
    name: repack.writeBitmaps
    scope: global
    value: true
  become_user: "{{ gitlab_user }}"

- name: Create Bundler directories
  file:
    path: "{{ gitlab_install_path | mandatory }}/{{ item }}"
    state: directory
    owner: git
  with_items:
    - ".bundle"
    - "vendor/"

- name: Install gems with bundler
  bundler:
    state: present
    deployment_mode: yes
    gemfile: "{{ gitlab_install_path | mandatory }}/Gemfile"
    exclude_groups: 
      - development
      - test
      - aws
      - mysql
      - kerberos
  become_user: git

- name: Install GitLab shell
  command: "sudo -u git -H bundle exec rake gitlab:shell:install REDIS_URL=unix:{{ redis_unixsocket }} RAILS_ENV=production SKIP_STORAGE_VALIDATION=true"
  args:
    chdir: "{{ gitlab_install_path | mandatory }}"

- name: Install GitLab-workhorse
  command: 'sudo -u git -H bundle exec rake "gitlab:workhorse:install[/home/git/gitlab-workhorse]" RAILS_ENV=production'
  args:
    chdir: "{{ gitlab_install_path | mandatory }}"

- name: Initialize database and activate advanced features
  shell:
    cmd: 'yes "yes" | sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production GITLAB_ROOT_PASSWORD={{ gitlab_root_password | mandatory }} GITLAB_ROOT_EMAIL={{ gitlab_root_mail | mandatory }}'
    chdir: "{{ gitlab_install_path | mandatory }}"
  async: 31557600 # Increase timeout for this task because it takes a while
  poll: 30

- name: Set privileges on database
  postgresql_privs:
    db: "{{ gitlab_db_name }}"
    privs: ALL
    type: database
    role: "{{ gitlab_db_user }}"
    unix_socket: "{{ postgres_run_directory }}"

- name: Set priviliges on tables
  postgresql_privs:
    db: "{{ gitlab_db_name }}"
    privs: ALL
    type: table
    objs: ALL_IN_SCHEMA
    role: "{{ gitlab_db_user }}"
    unix_socket: "{{ postgres_run_directory }}"

- name: Set priviliges on sequences
  postgresql_privs:
    db: "{{ gitlab_db_name }}"
    privs: ALL
    type: sequence
    objs: ALL_IN_SCHEMA
    role: "{{ gitlab_db_user }}"
    unix_socket: "{{ postgres_run_directory }}"

